CC			= gcc
CFLAGS		= -O3 -Wall -I/usr/local/include
DFLAGS		= -g -Wall -I/usr/local/include
DEST		=
LDFLAGS		=
LIBS		=
OBJS		=
PROGRAM		= bodhi
MKDIR		= mkdir -p


all:
	$(MAKE) clean
	$(MAKE) dir
	cd util; $(MAKE) all
	cp util/libbdutil.a lib/libbdutil.a
	cd src; $(MAKE) all
	cp src/a.out bin/bodhi
	cd core; $(MAKE) all
	cp core/libbdcore.a lib/libbdcore.a

debug:
	$(MAKE) dir
	cd util; $(MAKE) debug
	cp util/libbdutil.a lib/libbdutil.a
	cd src; $(MAKE) debug
	cp src/a.out bin/bodhi
	cd core; $(MAKE) debug
	cp core/libbdcore.a lib/libbdcore.a

install:
	if test -d $(BINDIR); then : ; else $(MKDIR) $(BINDIR); fi
	if test -d $(LIBDIR); then : ; else $(MKDIR) $(LIBDIR); fi
	cp bin/bodhi $(BINDIR)/bodhi
	cp lib/libbdcore.a $(LIBDIR)/libbdcore.a
	cp lib/libbdutil.a $(LIBDIR)/libbdutil.a

dir:
	mkdir -p lib
	mkdir -p bin

clean:
	cd util; $(MAKE) clean
	cd src; $(MAKE) clean
	cd core; $(MAKE) clean
	rm -f lib/*
	rm -f bin/*
	rmdir lib
	rmdir bin

runtest:
	@bin/bodhi -Llib test/hello.bd && ./a.out
	@bin/bodhi -Llib test/char.bd && ./a.out
	@bin/bodhi -Llib test/fib.bd && ./a.out
	@bin/bodhi -Llib test/args.bd && ./a.out aa bb cc dd ee
	@bin/bodhi -Llib test/fold.bd && ./a.out
	@bin/bodhi -Llib test/ref.bd && ./a.out
	@bin/bodhi -Llib test/array.bd && ./a.out
	@bin/bodhi -Llib test/closure.bd && ./a.out
	@bin/bodhi -Llib test/file.bd && ./a.out
	@bin/bodhi -Llib test/tuple.bd && ./a.out
	@bin/bodhi -Llib test/float.bd && ./a.out

